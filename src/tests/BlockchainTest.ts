import { Blockchain } from "../core/Blockchain";
import { Block } from "../core/Block";
import { ITransaction } from "../types/ITransaction";
import { Wallet } from "../wallet/Wallet";
import { TransactionFactory } from "../utils/TransactionFactory";




export function testBlockchain() {
    const systemWallet = new Wallet();
    const blockchain = new Blockchain(systemWallet);



    const alice = new Wallet()
    const bob = new Wallet()
    const charlie = new Wallet()
    const miner = new Wallet()

   // –®–∞–≥ 1: –º–∞–π–Ω–∏–º –ø—É—Å—Ç–æ–π –±–ª–æ–∫ ‚Äî Alice –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞–≥—Ä–∞–¥—É
   const block1 = new Block(Date.now(), [])
   blockchain.addBlock(block1, alice.publicKey)
   console.log("‚úÖ –ë–ª–æ–∫ 1 (–Ω–∞–≥—Ä–∞–¥–∞ Alice) –¥–æ–±–∞–≤–ª–µ–Ω")

   // –®–∞–≥ 2: Alice –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 40 Bob —Å –∫–æ–º–∏—Å—Å–∏–µ–π 2
   const tx2 = TransactionFactory.createSignedTransaction(alice, bob.publicKey, 40, 2)
   const block2 = new Block(Date.now(), [tx2])
   blockchain.addBlock(block2, miner.publicKey)
   console.log("‚úÖ –ë–ª–æ–∫ 2 (Alice -> Bob, fee 2) –¥–æ–±–∞–≤–ª–µ–Ω")

   // –®–∞–≥ 3: Bob –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 20 Charlie —Å –∫–æ–º–∏—Å—Å–∏–µ–π 3
   const tx3 = TransactionFactory.createSignedTransaction(bob, charlie.publicKey, 20, 3)
   const block3 = new Block(Date.now(), [tx3])
   blockchain.addBlock(block3, miner.publicKey)
   console.log("‚úÖ –ë–ª–æ–∫ 3 (Bob -> Charlie, fee 3) –¥–æ–±–∞–≤–ª–µ–Ω")

   // –í—ã–≤–æ–¥–∏–º –±–∞–ª–∞–Ω—Å—ã
   console.log("\nüí∞ –ë–∞–ª–∞–Ω—Å—ã:")
   console.log("Alice:", blockchain.getBalance(alice.publicKey))
   console.log("Bob:", blockchain.getBalance(bob.publicKey))
   console.log("Charlie:", blockchain.getBalance(charlie.publicKey))
   console.log("Miner:", blockchain.getBalance(miner.publicKey))
   console.log("System:", blockchain.getBalance(systemWallet.publicKey))
}
